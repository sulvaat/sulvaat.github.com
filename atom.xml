<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nihonhut]]></title>
  <link href="http://sulvaat.github.com/atom.xml" rel="self"/>
  <link href="http://sulvaat.github.com/"/>
  <updated>2012-03-16T13:34:45-04:00</updated>
  <id>http://sulvaat.github.com/</id>
  <author>
    <name><![CDATA[sul]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mass Effect 3 Let's Play]]></title>
    <link href="http://sulvaat.github.com/blog/2012/03/16/mass-effect-3-lets-play/"/>
    <updated>2012-03-16T12:48:00-04:00</updated>
    <id>http://sulvaat.github.com/blog/2012/03/16/mass-effect-3-lets-play</id>
    <content type="html"><![CDATA[<p>Mike is making a fantastic &#8220;Let&#8217;s play&#8221; of Bioware&#8217;s latest hit Mass Effect 3. Check it out and leave a comment!</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/95jc6Mgdmpc" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using dwm Continued]]></title>
    <link href="http://sulvaat.github.com/blog/2012/03/16/useing-dwm-continued/"/>
    <updated>2012-03-16T08:20:00-04:00</updated>
    <id>http://sulvaat.github.com/blog/2012/03/16/useing-dwm-continued</id>
    <content type="html"><![CDATA[<p>In my last guide, I quickly skimmed over the basics of getting dwm going in an arch linux machine. Now lets get some post-install configureation to get something that looks nice as well as works nice.</p>

<h2>Urxvt</h2>


<p>We told dwm to use dwm last time so lets get the stuff most users are looking for in a terminal - mainly transparency. Configuration for urxvt is done via the <code>.Xdefaults</code> file which it lookds for in <code>$HOME</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>URxvt*termName: rxvt
</span><span class='line'>
</span><span class='line'>## borderless and no scrollbar
</span><span class='line'> URxvt*scrollBar_right: false
</span><span class='line'> URxvt*scrollBar: false
</span><span class='line'> URxvt*borderLess: false
</span><span class='line'>
</span><span class='line'>## teh transparency stuff
</span><span class='line'> URxvt*inheritPixmap: true
</span><span class='line'> URxvt*tintColor: white
</span><span class='line'> URxvt*shading: 40
</span><span class='line'>
</span><span class='line'>## change default colors
</span><span class='line'> URxvt*background: #000000
</span><span class='line'> URxvt*foreground: #3300ff
</span><span class='line'> URxvt*color0: #000000
</span><span class='line'> URxvt*color1: #A80000
</span><span class='line'> URxvt*color2: #00A800
</span><span class='line'> URxvt*color3: #A85400
</span><span class='line'> URxvt*color4: #0000A8
</span><span class='line'> URxvt*color5: #A800A8
</span><span class='line'> URxvt*color6: #00A8A8
</span><span class='line'> URxvt*color7: #A8A8A8
</span><span class='line'> URxvt*color8: #545054
</span><span class='line'> URxvt*color9: #F85450
</span><span class='line'> URxvt*color10: #50FC50
</span><span class='line'> URxvt*color11: #F2FC50
</span><span class='line'> URxvt*color12: #5054F8
</span><span class='line'> URxvt*color13: #F854F8
</span><span class='line'> URxvt*color14: #50FCF8
</span><span class='line'> URxvt*color15: #F8FCF8</span></code></pre></td></tr></table></div></figure>


<p>My <code>.Xdefaults</code> is a good start but by far not all the things urxvt can do.</p>

<h2>Getting around dwm</h2>


<p>A quick list of the most used hotkeys in dwm</p>

<ul>
<li>alt+q - Bails out of dwm and brings you back to the command prompt.</li>
<li>alt+shift+c - Simply closes the current window.</li>
<li>alt+1-5 - Switches your desktop, holding shift while doing this moves the current window to that desktop.</li>
<li>alt+shift+enter - Spawns a terminal window.</li>
</ul>


<p>Thats all for now, going off to D.C later to the Japan Association to meet a friend!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Speed Up Your Life With dwm]]></title>
    <link href="http://sulvaat.github.com/blog/2012/03/14/speed-up-your-life-with-dwm/"/>
    <updated>2012-03-14T11:57:00-04:00</updated>
    <id>http://sulvaat.github.com/blog/2012/03/14/speed-up-your-life-with-dwm</id>
    <content type="html"><![CDATA[<p>Good X window managers make life good. Unless you&#8217;re into bloated desktop enviroments a simple X window manager is plenty sufficiant. Here is how to setup a slightly less basic dwm. This is mostly taken from the <a href="https://wiki.archlinux.org/index.php/Dwm#Customizing_config.h">ArchWiki</a> with a few added comments. Some steps have been simplified but helper applications like conky and dmenu have been split up.</p>

<p>First get what we need to install dwm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S abs dmenu</span></code></pre></td></tr></table></div></figure>


<p>If you diddn&#8217;t already have base-devel selected at install, add it now.</p>

<p>Now copy the scipts from the dwm community:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># abs community/dwm
</span><span class='line'>$ cp -r /var/abs/community/dwm ~/dwm && cd ~/dwm</span></code></pre></td></tr></table></div></figure>


<p>Now that we have a bare copy of dwm in our user directory, lets configure. dwm is mainly configured through its <code>config.h</code> file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/* appearance */
</span><span class='line'>static const char font[]            = "-*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*";
</span><span class='line'>static const char normbordercolor[] = "#444444";
</span><span class='line'>static const char normbgcolor[]     = "#333333";
</span><span class='line'>static const char normfgcolor[]     = "#bbbbbb";
</span><span class='line'>static const char selbordercolor[]  = "#005577";
</span><span class='line'>static const char selbgcolor[]      = "#333333";
</span><span class='line'>static const char selfgcolor[]      = "#3300ff";
</span><span class='line'>static const unsigned int borderpx  = 1;        /* border pixel of windows */
</span><span class='line'>static const unsigned int snap      = 32;       /* snap pixel */
</span><span class='line'>static const Bool showbar           = True;     /* False means no bar */
</span><span class='line'>static const Bool topbar            = True;     /* False means bottom bar */</span></code></pre></td></tr></table></div></figure>


<p>Most of it is self explanitory here</p>

<p>For:</p>

<ul>
<li><code>normbgcolor[]</code> I like dark since it is easy to contrast with&#8230;but not black so #333333
<li><code>normfgcolor[]</code> I picked a nice shade of blue from a list of web colors (easy to google for) #bbbbbb
<li> also not that I made <code>selbgcolor[]</code> and <code>selfgcolor[]</code> go with the same dark theme.
</ul>


<p>Now lets set a good terminal emulator. I like urxvt just because it was the easiest to make look pretty.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S rxvt-unicode</span></code></pre></td></tr></table></div></figure>


<p>Now lets set dwm to use it when e press <code>alt+shift+enter</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/* commands */
</span><span class='line'>static const char *dmenucmd[] = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
</span><span class='line'>static const char *termcmd[]  = { "urxvt", NULL };</span></code></pre></td></tr></table></div></figure>


<p>For the most part you just need to change the line above with urxvt, the rest tells dwm about how to theme dmenu, same as above.</p>

<p>Now lets install (whew!)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ makepkg -g &gt;&gt; PKGBUILD
</span><span class='line'>$ makepkg -efi --skipinteg</span></code></pre></td></tr></table></div></figure>


<p>Now lets get conky and set it up for our status bar!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S conky</span></code></pre></td></tr></table></div></figure>


<p>Conky needs to have it&#8217;s output sent to the status bar <code>xsetroot -name</code>. Add this to your <code>~/.xinitrc</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>conky | while read -r; do xsetroot -name "$REPLY"; done &
</span><span class='line'>exec dwm</span></code></pre></td></tr></table></div></figure>


<p>Save and close that, then open up your conkyrc or <code>/etc/conky/conky.conf</code>. Below is a snipt from mine which is set up for a dual core cpu and wlan0 as the network to display stats from.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>out_to_console yes
</span><span class='line'>out_to_x no
</span><span class='line'>background no
</span><span class='line'>update_interval 2
</span><span class='line'>total_run_times 0
</span><span class='line'>use_spacer none
</span><span class='line'>
</span><span class='line'>TEXT
</span><span class='line'>${cpu cpu1}% | ${cpu cpu2}% :: ${acpitemp}c :: ${downspeed wlan0}D | ${upspeed wlan0}U :: ${time %a %b %d %I:%M%P}</span></code></pre></td></tr></table></div></figure>


<p>We are finally finished! Enjoy you&#8217;re new dwm desktop. I will make another post shortly with the kep combinations and other ways that I have found to speed up workflow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Easily Switch To USB Audio Output in Arch]]></title>
    <link href="http://sulvaat.github.com/blog/2012/03/13/easily-switch-audio-outputs-in-arch/"/>
    <updated>2012-03-13T23:36:00-04:00</updated>
    <id>http://sulvaat.github.com/blog/2012/03/13/easily-switch-audio-outputs-in-arch</id>
    <content type="html"><![CDATA[<p>Lets face it, switching audio outputs is a pain on linux. I made a quick script that you can place in /bin to make life easier.</p>

<p>You will need to get asoundconf out of the AUR first, once thats ready to go:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ asoundconf is-active
</span><span class='line'>$ asoundconf list</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sanae@MORIYA&gt; asoundconf list
</span><span class='line'>Names of available soundcards:
</span><span class='line'>Intel 
</span><span class='line'>CODEC // This is my USB DAC</span></code></pre></td></tr></table></div></figure>


<p>This will print all the cards in your system. Remember them since you will make a script for each one now:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>asoundconf is-active
</span><span class='line'>asoundconf list
</span><span class='line'>asoundconf set-default-card Intel</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>asoundconf is-active
</span><span class='line'>asoundconf list
</span><span class='line'>asoundconf set-default-card CODEC</span></code></pre></td></tr></table></div></figure>


<p>Simple.</p>

<p>Now, move them to /bin so all you need to do is type intel or codec (in this case) to switch.</p>

<p>Enjoy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laptop Woes]]></title>
    <link href="http://sulvaat.github.com/blog/2012/03/13/laptop-woes/"/>
    <updated>2012-03-13T23:22:00-04:00</updated>
    <id>http://sulvaat.github.com/blog/2012/03/13/laptop-woes</id>
    <content type="html"><![CDATA[<p>My laptop decided to kick the bucket last week. The HDD kept making clicks of death, screen flickered whenever the lid moved. Since I can&#8217;t afford to buy a new one and I was starting to miss it
just hours after it had died, it was time to put on the operating gloves and open this baby up!</p>

<p>First thing that needed to be done was a new HDD, I had a spare 250gb drive that fit in nicely. Done. Next was the screen. I peeled off the sticky silicone stoppers around the bezel which revealed
four small screws. As I went about unscrewing them, I found that the top left one had been pre-striped from Chine&#8230;. awesome. After wrestling around with it some more I finally got it; amazing what a
small dab of hairspray can do! The flickering was caused by a few shorts from exposed wire on the ribbon cable. With a soldering iron and a toothbrush, I melted a few of the bristles to seal off the
exposed parts. It smelled like toddler poop for a bit afterwards. Anyway, hit the power and away she went, gave the screen a few swings and all was fine. Yippee!</p>

<p>Now comes the fun part! Since the old HDD was now toast, I had to reinstall the OS on the new drive. Being a tech savvy person, Linux was the obviouse choice. I opted for Archlinux over the
popular debian flavors. I have been working with Arch for the past six months or so and have really come to appreciate it&#8217;s methodologies and it&#8217;s wonderful community. At first, Arch can seem pretty
daunting because there is no default GUI with a pretty setup application. As a fan of BSD, this was not a problem. Just followed the Arch Beginners Guide. All is now well with my laptop!</p>
]]></content>
  </entry>
  
</feed>
